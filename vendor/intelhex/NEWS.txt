NEWS
====

* 2013/08/02 v.1.5

    - API changes: Functions tobinarray/tobinstr/tobinfile:
      pad parameter is deprecated and will be removed in
      future releases. Use IntelHex.padding attribute instead,
      and don't pass pad as None explicitly please.
      If you need to use size parameter, then use syntax like that:
          ih.tobinarray(start=xxx, size=yyy)
    - API changes: Functions tobinarray/tobinstr/tobinfile:
      default value of pad is None now (was 0xFF) 
      to allow value of IntelHex.padding used 
      if no explicit pad specified.
    - Fixed bug: wrong getopt error handling in some scripts.
      (Thanks to Andy Mozhevilov for bug report)
    - PEP-8 style improvements. (Thanks to Stefan Schmitt)
    - IntelHex16bit.tobinarray method returns array of unsigned short
      (words) values. (Feature request from Stefan Schmitt)
    - Improved Python 3 compatibility (don't use old file() function).
      (Thanks to Luis Panadero Guarde√±o for bug report)

* 2012/04/25 v.1.4

    - New feature: compare 2 hex files using hex dump
      as string representation. Feature available as
      worker function diff_dumps() and as command-line
      utility hexdiff.py (#627924).
    - Changes in the codebase suggested by 2to3 tool to provide
      compatibility with Python3. Now sources can be successfully
      converted to Python3 with 2to3 utility. 
      See Python 3 notes in README.txt and documentation.
      (Thanks to Bernhard Leiner for his help)
    - Fixed bug #988148: IntelHex16bit should copy all public attributes
      from source IntelHex 8-bit object. (Thanks to Morgan McClure)

* 2010/11/24 v.1.3

    - hex2dump: show 0x7F character as dot for better compatibility 
      with GNU less utility.
    - tobinarray, tobinfile, tobinstr: added size parameter. (Bug #408748)
    - fixed error in hexmerge.py script. (#676023)

* 2009/08/04 v.1.2

    - Fixed bug 372620: tobinarray on empty file should return pad bytes 
      when address range explicitly specified.
    - Improved docstrings: explicitly say that 'end' param of to-* methods 
      is always inclusive. (see bug #372625 for details).
    - Improved documentation on ih.dump(tofile).

* 2009/03/12 v.1.1

    - Fixed bug in writing hex files with small chains of bytes
    - Improved Python 2.6 compatibility

* 2009/01/01 v.1.0

    - Improved API, better performance
    - New User Manual (Zachary Clifford)

* 2007/06/16 v.0.9.0 (New API release)

    - New API for IntelHex16bit

* 2007/04/27 v.0.8.6 (BugFix and Performance improvements)

    - IntelHex is able to read/write start address records
      (HEX record type 03 and 05). (fix bug #109872)
    - Backport (from 0.9 branch) of performance improvements 
      for reading hex files

* 2007/04/22 v.0.9.devel (New API pre-release)

    - New API
    - Performance improvements: read hex file now ~45% faster

* 2007/02/26 v.0.8.5 (BugFix Release)

    Performance improvements for writing big hex files
    when starting address is far from 0.
    Patch from Heiko Henkelmann.
       
* 2007/02/26 v.0.8.4 (License added)

    The code actually licensed under BSD, but there was 
    no LICENSE file in sources archive. Added license file
    and explicit declaration in the source code.

* 2006/09/05 v.0.8.3 (BugFix Release)

    Fix writing hex files with extended linear records
    (when address overlaps 64K boundary).
    Patch from Henrik Maier.
    
* 2006/04/11 v.0.8.2 (Major improvements release)

    - Introduced new class IntelHex16bit for manipulate
      data as 16-bit values
    - You can manipulate data using dictionary-like
      interface (i.e. syntax: ih[addr] = value)
    - Added new method .writefile(file) for writing
      data to hex file
    - Using unittest for testing functionality
    
* 2006/03 v.0.6

    Convertor engine hex2bin extracted to stand-alone function
    for using by external clients of intelhex
    
* 2005 v.0.5

    First public release
